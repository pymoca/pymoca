
# do not edit, generated by pymola

from __future__ import print_function, division
import sympy
import sympy.physics.mechanics as mech
from pymola.backends.sympy.runtime import OdeModel
from sympy import sin, cos, tan


class Estimator(OdeModel):

    def __init__(self):

        super(Estimator, self).__init__()

        # states
        x = mech.dynamicsymbols('x')
        self.x = sympy.Matrix([x])
        self.x0 = {
            x : 0,
            }

        # variables
        y = mech.dynamicsymbols('y')
        self.v = sympy.Matrix([y])

        # constants
        self.c = sympy.Matrix([])
        self.c0 = {
            }

        # parameters
        self.p = sympy.Matrix([])
        self.p0 = {
            }

        # inputs
        self.u = sympy.Matrix([])
        self.u0 = {
            }

        # outputs
        y = mech.dynamicsymbols('y')
        self.y = sympy.Matrix([y])

        # equations
        self.eqs = [
            (x).diff(self.t) - (- x),
            y - (x),
            ]

        self.compute_fg()